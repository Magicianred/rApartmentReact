{"ast":null,"code":"var _jsxFileName = \"/home/INVOLVES/leticia.coelho/Documentos/react/rApartmentReact/src/pages/Home/StartExerciseButton.tsx\";\nimport { Button } from '@chakra-ui/core';\nimport NoSleep from 'nosleep.js';\nimport React, { useCallback, useRef } from 'react';\nimport { FaPlay } from 'react-icons/fa';\nimport * as Tone from 'tone';\nexport const StartExerciseButton = React.memo(({\n  isDisabled,\n  onClick\n}) => {\n  const isFirstClick = useRef(true);\n  const handleClick = useCallback(e => {\n    onClick && onClick();\n    if (!isFirstClick.current) return; // This button silently triggers consent for\n    // * speech synthesis\n    // * screen awake\n\n    Tone.start();\n\n    if (window.navigator.wakeLock) {\n      const noSleep = new NoSleep();\n      noSleep.enable();\n    }\n\n    if (window.speechSynthesis) {\n      const ssu = new window.SpeechSynthesisUtterance('');\n      window.speechSynthesis.speak(ssu);\n    }\n\n    isFirstClick.current = false; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, {\n    isDisabled: isDisabled,\n    flex: \"1\",\n    leftIcon: FaPlay,\n    type: \"button\",\n    variantColor: \"teal\",\n    onClick: e => handleClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Start\");\n});","map":{"version":3,"sources":["/home/INVOLVES/leticia.coelho/Documentos/react/rApartmentReact/src/pages/Home/StartExerciseButton.tsx"],"names":["Button","NoSleep","React","useCallback","useRef","FaPlay","Tone","StartExerciseButton","memo","isDisabled","onClick","isFirstClick","handleClick","e","current","start","window","navigator","wakeLock","noSleep","enable","speechSynthesis","ssu","SpeechSynthesisUtterance","speak"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAOA,OAAO,MAAMC,mBAAuD,GAAGL,KAAK,CAACM,IAAN,CACrE,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAC3B,QAAMC,YAAY,GAAGP,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMQ,WAAW,GAAGT,WAAW,CAAEU,CAAD,IAA0C;AACxEH,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACA,QAAI,CAACC,YAAY,CAACG,OAAlB,EAA2B,OAF6C,CAIxE;AACA;AACA;;AACAR,IAAAA,IAAI,CAACS,KAAL;;AAEA,QAAIC,MAAM,CAACC,SAAP,CAAiBC,QAArB,EAA+B;AAC7B,YAAMC,OAAO,GAAG,IAAIlB,OAAJ,EAAhB;AACAkB,MAAAA,OAAO,CAACC,MAAR;AACD;;AAED,QAAIJ,MAAM,CAACK,eAAX,EAA4B;AAC1B,YAAMC,GAAG,GAAG,IAAIN,MAAM,CAACO,wBAAX,CAAoC,EAApC,CAAZ;AACAP,MAAAA,MAAM,CAACK,eAAP,CAAuBG,KAAvB,CAA6BF,GAA7B;AACD;;AAEDX,IAAAA,YAAY,CAACG,OAAb,GAAuB,KAAvB,CAnBwE,CAoBxE;AACD,GArB8B,EAqB5B,EArB4B,CAA/B;AAuBA,sBACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEL,UADd;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,QAAQ,EAAEJ,MAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAC,MALf;AAME,IAAA,OAAO,EAAGQ,CAAD,IAAOD,WAAW,CAACC,CAAD,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAYD,CAtCoE,CAAhE","sourcesContent":["import { Button } from '@chakra-ui/core'\nimport NoSleep from 'nosleep.js'\nimport React, { useCallback, useRef } from 'react'\nimport { FaPlay } from 'react-icons/fa'\nimport * as Tone from 'tone'\n\ninterface StartExerciseButtonProps {\n  isDisabled: boolean\n  onClick: () => void\n}\n\nexport const StartExerciseButton: React.FC<StartExerciseButtonProps> = React.memo(\n  ({ isDisabled, onClick }) => {\n    const isFirstClick = useRef(true)\n    const handleClick = useCallback((e: React.MouseEvent<any, MouseEvent>) => {\n      onClick && onClick()\n      if (!isFirstClick.current) return\n\n      // This button silently triggers consent for\n      // * speech synthesis\n      // * screen awake\n      Tone.start()\n\n      if (window.navigator.wakeLock) {\n        const noSleep = new NoSleep()\n        noSleep.enable()\n      }\n\n      if (window.speechSynthesis) {\n        const ssu = new window.SpeechSynthesisUtterance('')\n        window.speechSynthesis.speak(ssu)\n      }\n\n      isFirstClick.current = false\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n      <Button\n        isDisabled={isDisabled}\n        flex='1'\n        leftIcon={FaPlay}\n        type='button'\n        variantColor='teal'\n        onClick={(e) => handleClick(e)}\n      >\n        Start\n      </Button>\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"module"}