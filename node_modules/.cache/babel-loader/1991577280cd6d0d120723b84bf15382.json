{"ast":null,"code":"// import React from 'react'\n// import { RootStore } from '../store'\n//\n// const storeContext = React.createContext<RootStore | null>(null)\n//\n// export const StoreProvider: React.FC = ({ children }) => {\n//   const rootStore = new RootStore()\n//\n//   return (\n//     <storeContext.Provider value={rootStore}>{children}</storeContext.Provider>\n//   )\n// }\n//\n// export const useStore = () => {\n//   const store = React.useContext(storeContext)\n//   if (!store) {\n//     throw new Error('useStore must be used within a StoreProvider.')\n//   }\n//   return store\n// }","map":{"version":3,"sources":["/home/INVOLVES/leticia.coelho/Documentos/react/rApartmentReact/src/hooks/useStore.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react'\n// import { RootStore } from '../store'\n//\n// const storeContext = React.createContext<RootStore | null>(null)\n//\n// export const StoreProvider: React.FC = ({ children }) => {\n//   const rootStore = new RootStore()\n//\n//   return (\n//     <storeContext.Provider value={rootStore}>{children}</storeContext.Provider>\n//   )\n// }\n//\n// export const useStore = () => {\n//   const store = React.useContext(storeContext)\n//   if (!store) {\n//     throw new Error('useStore must be used within a StoreProvider.')\n//   }\n//   return store\n// }\n"]},"metadata":{},"sourceType":"module"}