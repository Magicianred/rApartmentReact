{"ast":null,"code":"var _jsxFileName = \"/home/INVOLVES/leticia.coelho/Documentos/react/rApartmentReact/src/pages/Home/RoundChoice.tsx\";\nimport { FormControl, FormLabel, Select } from '@chakra-ui/core';\nimport { useObserver } from 'mobx-react-lite';\nimport React from 'react';\nimport { useStore } from '../../hooks/useStore';\nconst rounds = [1, 2, 3, 4, 5];\nexport const RoundChoice = () => {\n  const store = useStore();\n  return useObserver(() => /*#__PURE__*/React.createElement(FormControl, {\n    mb: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"destination-round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Destination round\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"destination-round\",\n    value: store.exercise.newExercise.round,\n    onChange: e => {\n      const destinationRound = parseInt(e.target.value);\n      store.exercise.changeDestinationRound(destinationRound);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, rounds.map(round => /*#__PURE__*/React.createElement(\"option\", {\n    key: `destination-round-${round}`,\n    value: round,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Round \", round)))));\n};","map":{"version":3,"sources":["/home/INVOLVES/leticia.coelho/Documentos/react/rApartmentReact/src/pages/Home/RoundChoice.tsx"],"names":["FormControl","FormLabel","Select","useObserver","React","useStore","rounds","RoundChoice","store","exercise","newExercise","round","e","destinationRound","parseInt","target","value","changeDestinationRound","map"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,iBAA/C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,MAAMC,MAAiB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AAEA,SAAOF,WAAW,CAAC,mBACjB,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,KAAK,EAAEK,KAAK,CAACC,QAAN,CAAeC,WAAf,CAA2BC,KAFpC;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAA6C;AACrD,YAAMC,gBAAgB,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjC;AAEAR,MAAAA,KAAK,CAACC,QAAN,CAAeQ,sBAAf,CAAsCJ,gBAAtC;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGP,MAAM,CAACY,GAAP,CAAYP,KAAD,iBACV;AAAQ,IAAA,GAAG,EAAG,qBAAoBA,KAAM,EAAxC;AAA2C,IAAA,KAAK,EAAEA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSA,KADT,CADD,CATH,CAFF,CADgB,CAAlB;AAoBD,CAvBM","sourcesContent":["import { FormControl, FormLabel, Select } from '@chakra-ui/core'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { useStore } from '../../hooks/useStore'\n\nconst rounds: RoundId[] = [1, 2, 3, 4, 5]\n\nexport const RoundChoice = () => {\n  const store = useStore()\n\n  return useObserver(() => (\n    <FormControl mb='2'>\n      <FormLabel htmlFor='destination-round'>Destination round</FormLabel>\n      <Select\n        id='destination-round'\n        value={store.exercise.newExercise.round}\n        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n          const destinationRound = parseInt(e.target.value) as RoundId\n\n          store.exercise.changeDestinationRound(destinationRound)\n        }}\n      >\n        {rounds.map((round) => (\n          <option key={`destination-round-${round}`} value={round}>\n            Round {round}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}